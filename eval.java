public class eval
{
	board b;
	final static int psqP[]=
	{
		 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		 2, 0, 4,-4,-4, 6, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
		 0, 2, 0, 4, 4, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		 0, 0, 2, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		 4, 4, 4, 6, 6, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0,
		 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	};
	final static int psqN[]=
	{
		-8,-6,-4,-4,-4,-4,-6,-8, 0, 0, 0, 0, 0, 0, 0, 0,
		-6,-2, 0, 0, 0, 0,-2,-6, 0, 0, 0, 0, 0, 0, 0, 0,
		-4, 0, 2, 2, 2, 2, 0,-4, 0, 0, 0, 0, 0, 0, 0, 0,
		-4, 0, 2, 4, 4, 2, 0,-4, 0, 0, 0, 0, 0, 0, 0, 0,
		-4, 0, 2, 4, 4, 2, 0,-4, 0, 0, 0, 0, 0, 0, 0, 0,
		-4, 0, 2, 2, 2, 2, 0,-4, 0, 0, 0, 0, 0, 0, 0, 0,
		-6,-2, 0, 0, 0, 0,-2,-6, 0, 0, 0, 0, 0, 0, 0, 0,
		-8,-6,-4,-4,-4,-4,-6,-8, 0, 0, 0, 0, 0, 0, 0, 0,
	};
	final static int psqB[]=
	{
		 0,-2,-3,-4,-4,-3,-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		-2, 4, 0, 0, 0, 0, 4,-2, 0, 0, 0, 0, 0, 0, 0, 0,
		-3, 0, 6, 2, 2, 6, 0,-3, 0, 0, 0, 0, 0, 0, 0, 0,
		-4, 0, 2, 8, 8, 2, 0,-4, 0, 0, 0, 0, 0, 0, 0, 0,
		-4, 0, 2, 8, 8, 2, 0,-4, 0, 0, 0, 0, 0, 0, 0, 0,
		-3, 0, 6, 2, 2, 6, 0,-3, 0, 0, 0, 0, 0, 0, 0, 0,
		-2, 4, 0, 0, 0, 0, 4,-2, 0, 0, 0, 0, 0, 0, 0, 0,
		 0,-2,-3,-4,-4,-3,-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	};
	final static int psqK[]=
	{
		 0,-2,-3,-4,-4,-3,-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		-2, 4, 0, 0, 0, 0, 4,-2, 0, 0, 0, 0, 0, 0, 0, 0,
		-3, 0, 6, 2, 2, 6, 0,-3, 0, 0, 0, 0, 0, 0, 0, 0,
		-4, 0, 2, 8, 8, 2, 0,-4, 0, 0, 0, 0, 0, 0, 0, 0,
		-4, 0, 2, 8, 8, 2, 0,-4, 0, 0, 0, 0, 0, 0, 0, 0,
		-3, 0, 6, 2, 2, 6, 0,-3, 0, 0, 0, 0, 0, 0, 0, 0,
		-2, 4, 0, 0, 0, 0, 4,-2, 0, 0, 0, 0, 0, 0, 0, 0,
		 0,-2,-3,-4,-4,-3,-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	};
	final static int pval[]={0,100,300,300,500,900,0};
	eval(board x)
	{
		b=x;
	}
	int e()
	{
		int ws=0,bs=0,sq;
		for(int x=0;x<b.pll[0];x++)
		{
			sq=b.pl[0][x];
			switch(b.p[sq])
			{
				case 1:
					ws+=pval[1]+psqP[sq];
					break;
				case 2:
					ws+=pval[2]+psqN[sq];
					break;
				case 3:
					ws+=pval[3]+psqB[sq];
					break;
				case 4:
					ws+=pval[4];
					break;
				case 5:
					ws+=pval[5]+psqB[sq];
					break;
				case 6:
					ws+=pval[6];
					break;
			}
		}
		for(int x=0;x<b.pll[1];x++)
		{
			sq=b.pl[1][x];
			switch(b.p[sq])
			{
				case 1:
					bs+=pval[1]+psqP[sq];
					break;
				case 2:
					bs+=pval[2]+psqN[sq];
					break;
				case 3:
					bs+=pval[3]+psqB[sq];
					break;
				case 4:
					bs+=pval[4];
					break;
				case 5:
					bs+=pval[5]+psqB[sq];
					break;
				case 6:
					bs+=pval[6];
					break;
			}
		}
		return b.s==1?ws-bs:bs-ws;
	}
}
